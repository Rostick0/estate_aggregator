{
    "openapi": "3.0.0",
    "info": {
        "title": "Estate Aggregator",
        "description": "An API of app",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "email": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "john@test.com",
                                    "password": "johnjohn1"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "randomtokenasfhajskfhajf398rureuuhfdshk"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "number",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/UserSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required. (and 1 more errors)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "John",
                                    "email": "john@test.com",
                                    "password": "johnjohn1"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "randomtokenasfhajskfhajf398rureuuhfdshk"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "number",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/UserSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully signed out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh",
                "operationId": "b2eae7a8032954d25b46c7ec6f489c68",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "randomtokenasfhajskfhajf398rureuuhfdshk"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "number",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/UserSchema"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Me",
                "operationId": "b9abb1a7a74670a19c215c2c133f14d8",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/api/city": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Index",
                "operationId": "c2504917c4da1139bffc3dd1d5409f8f",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name city",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Москва"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit data",
                        "schema": {
                            "type": "number"
                        },
                        "example": "30"
                    },
                    {
                        "name": "extends[]",
                        "in": "query",
                        "description": "Extends data",
                        "schema": {
                            "type": "array",
                            "items": {},
                            "example": [
                                "posts"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CitySchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Index",
                "operationId": "b4b7284c8fb22330a82699a8356a5e88",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title post",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Сайт"
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "City id",
                        "schema": {
                            "type": "number"
                        },
                        "example": "1"
                    },
                    {
                        "name": "rubric_id",
                        "in": "query",
                        "description": "Rubric id",
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "schema": {
                            "type": "number"
                        },
                        "example": "2"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit data",
                        "schema": {
                            "type": "number"
                        },
                        "example": "20"
                    },
                    {
                        "name": "extends[]",
                        "in": "query",
                        "description": "Extends data",
                        "schema": {
                            "type": "array",
                            "items": {},
                            "example": [
                                "images",
                                "main_image",
                                "user",
                                "city",
                                "rubric"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Post store",
                "operationId": "2b5846c8a1e7a22fa31af93f7accb003",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "city_id",
                                    "rubric_id",
                                    "source"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Сайт"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Хорошо делайте, плохо не делайте"
                                    },
                                    "city_id": {
                                        "type": "number",
                                        "example": "3"
                                    },
                                    "rubric_id": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "source": {
                                        "type": "number",
                                        "example": "<a href>сайт</a>"
                                    },
                                    "main_image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "images[]": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title title is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "content": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The content field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "city_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The city_id field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "rubric_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The rubric_id field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "source": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The source field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/api/post/{id}": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Post update",
                "operationId": "5dd9f9ecae375d4c615dfc3bac75b741",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "city_id",
                                    "rubric_id",
                                    "source",
                                    "_method"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Сайт"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Хорошо делайте, плохо не делайте"
                                    },
                                    "city_id": {
                                        "type": "number",
                                        "example": "3"
                                    },
                                    "rubric_id": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "source": {
                                        "type": "number",
                                        "example": "<a href>сайт</a>"
                                    },
                                    "main_image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "images[]": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "images_delete[]": {
                                        "type": "number"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title title is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "content": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The content field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "city_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The city_id field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "rubric_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The rubric_id field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                },
                                                "source": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The source field is required."
                                                    },
                                                    "collectionFormat": "multi"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Post delete",
                "operationId": "6d25b4d3f1749560f4d0d0ae67e41858",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post 1 deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/api/rubric": {
            "get": {
                "tags": [
                    "Rubric"
                ],
                "summary": "Index",
                "operationId": "262e115ddd743d3f7bb77df4af1f704c",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RubricSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CitySchema": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Москва"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    }
                },
                "type": "object"
            },
            "ImageSchema": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "type_id": {
                        "type": "number",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "photo"
                    },
                    "name": {
                        "type": "string",
                        "example": "Какое-то фото"
                    },
                    "path": {
                        "type": "number",
                        "example": "http://site.com/url"
                    },
                    "rubric_id": {
                        "type": "number",
                        "example": 1
                    },
                    "source": {
                        "type": "string",
                        "example": "<a href=\">источник<a>"
                    },
                    "width": {
                        "type": "number",
                        "example": 100
                    },
                    "height": {
                        "type": "number",
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    }
                },
                "type": "object"
            },
            "PostSchema": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Почему надо продавать"
                    },
                    "content": {
                        "type": "string",
                        "example": "Да потому что это принесет вам прибыль"
                    },
                    "user_id": {
                        "type": "number",
                        "example": 1
                    },
                    "city_id": {
                        "type": "number",
                        "example": 1
                    },
                    "rubric_id": {
                        "type": "number",
                        "example": 1
                    },
                    "source": {
                        "type": "string",
                        "example": "<a href=\">источник<a>"
                    },
                    "count_view": {
                        "type": "number",
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    }
                },
                "type": "object"
            },
            "RubricSchema": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Продажа"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    }
                },
                "type": "object"
            },
            "UserSchema": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Jonh"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@test.com"
                    },
                    "email_verified_at": {
                        "type": "number",
                        "example": 0
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-06-28 06:06:17"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "jwt": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}